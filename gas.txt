============================= test session starts ==============================
platform linux -- Python 3.12.7, pytest-8.3.4, pluggy-1.5.0
rootdir: /home/guire/vyper-course/mox-buy-me-a-coffee-cu
configfile: pyproject.toml
plugins: xdist-3.6.1, titanoboa-0.2.5, cov-6.0.0, hypothesis-6.122.3
collected 8 items

tests/unit/test_unit_coffee.py ........                                  [100%]                                                                                                                                      
                                                                                                                                      
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━━┳━━━━━━━┳━━━━━┳━━━━━━┓
┃ Contract                                             ┃ Computation                    ┃ Count ┃ Mean ┃ Median ┃ Stdev ┃ Min ┃ Max  ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━━╇━━━━━━━╇━━━━━╇━━━━━━┩
│ Path: src                                            │                                │       │      │        │       │     │      │
│ Name: buy_me_a_coffee.vy                             │                                │       │      │        │       │     │      │
│ Address: 0x3d06E92f20305D9a2D71a1D479E9EE22690Ae7E4  │                                │       │      │        │       │     │      │
│                                                      │ withdraw                       │ 2     │ 632  │ 632    │ 604   │ 205 │ 1060 │
│                                                      │ fund                           │ 10    │ 234  │ 234    │ 0     │ 234 │ 234  │
│                                                      │ get_eth_to_usd_rate            │ 1     │ 115  │ 115    │ 0     │ 115 │ 115  │
│                                                      │ <none>                         │ 9     │ 3    │ 3      │ 1     │ 3   │ 6    │
├──────────────────────────────────────────────────────┼────────────────────────────────┼───────┼──────┼────────┼───────┼─────┼──────┤
│ Path: src/mocks                                      │                                │       │      │        │       │     │      │
│ Name: mocks_v3_aggregator.vy                         │                                │       │      │        │       │     │      │
│ Address: 0xC6Acb7D16D51f72eAA659668F30A40d87E2E0551  │                                │       │      │        │       │     │      │
│                                                      │ <none>                         │ 11    │ 3    │ 3      │ 0     │ 3   │ 3    │
└──────────────────────────────────────────────────────┴────────────────────────────────┴───────┴──────┴────────┴───────┴─────┴──────┘
                                                                                                                                                                                           
                                                                                                                                                                                           
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
┃ Contract                                             ┃ Computation                                                                     ┃ Count ┃ Mean  ┃ Median ┃ Stdev ┃ Min   ┃ Max   ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━┩
│ Path: src                                            │                                                                                 │       │       │        │       │       │       │
│ Name: buy_me_a_coffee.vy                             │                                                                                 │       │       │        │       │       │       │
│ Address: 0x3d06E92f20305D9a2D71a1D479E9EE22690Ae7E4  │                                                                                 │ Count │ Mean  │ Median │ Stdev │ Min   │ Max   │
│ ---------------------------------------------------- │ --------------------------------------------------------------------------      │ ----- │ ----- │ -----  │ ----- │ ----- │ ----- │
│ src/buy_me_a_coffee.vy:                              │  14: PRICE_FEED: public(immutable(AggregatorV3Interface)) # 0x694AA1769357215D… │ 1     │ 3     │ 3      │ 0     │ 3     │ 3     │
│ src/buy_me_a_coffee.vy:                              │  15: OWNER: public(immutable(address))                                          │ 5     │ 3     │ 3      │ 0     │ 3     │ 3     │
│ src/buy_me_a_coffee.vy:                              │  18: funders: public(DynArray)                                                  │ 1     │ 3     │ 3      │ 0     │ 3     │ 3     │
│ src/buy_me_a_coffee.vy:                              │  19: funder_to_amount_funded: public(HashMap)                                   │ 1     │ 3     │ 3      │ 0     │ 3     │ 3     │
│ ---------------------------------------------------- │ --------------------------------------------------------------------------      │ ----- │ ----- │ -----  │ ----- │ ----- │ ----- │
│ src/buy_me_a_coffee.vy:MINIMUM_USD                   │  13: MINIMUM_USD: public(constant(uint256)) = as_wei_value(5, "ether")          │ 1     │ 6     │ 6      │ 0     │ 6     │ 6     │
│ ---------------------------------------------------- │ --------------------------------------------------------------------------      │ ----- │ ----- │ -----  │ ----- │ ----- │ ----- │
│ src/buy_me_a_coffee.vy:withdraw                      │  57: self.funder_to_amount_funded = 0                                           │ 2     │ 363   │ 363    │ 420   │ 66    │ 660   │
│ src/buy_me_a_coffee.vy:withdraw                      │  47: def withdraw():                                                            │ 2     │ 205   │ 205    │ 184   │ 75    │ 336   │
│ src/buy_me_a_coffee.vy:withdraw                      │  52: assert msg.sender == OWNER, "Not the contract owner!"                      │ 2     │ 41    │ 41     │ 0     │ 41    │ 41    │
│ src/buy_me_a_coffee.vy:withdraw                      │  53: raw_call(OWNER, b"", value = self.balance)                                 │ 2     │ 19    │ 19     │ 0     │ 19    │ 19    │
│ src/buy_me_a_coffee.vy:withdraw                      │  56: for funder: address in self.funders:                                       │ 2     │ 2     │ 2      │ 0     │ 2     │ 2     │
│ src/buy_me_a_coffee.vy:withdraw                      │  58: self.funders = []                                                          │ 2     │ 2     │ 2      │ 0     │ 2     │ 2     │
│ ---------------------------------------------------- │ --------------------------------------------------------------------------      │ ----- │ ----- │ -----  │ ----- │ ----- │ ----- │
│ src/buy_me_a_coffee.vy:_fund                         │  43: self.funder_to_amount_funded += msg.value                                  │ 10    │ 67    │ 67     │ 0     │ 67    │ 67    │
│ src/buy_me_a_coffee.vy:_fund                         │  40: usd_value_of_eth: uint256 = get_price_module._get_eth_to_usd_rate(PRICE_F… │ 10    │ 29    │ 29     │ 0     │ 29    │ 29    │
│ src/buy_me_a_coffee.vy:_fund                         │  41: assert usd_value_of_eth >= MINIMUM_USD, "You must spend more ETH!"         │ 10    │ 23    │ 23     │ 0     │ 23    │ 23    │
│ src/buy_me_a_coffee.vy:_fund                         │  42: self.funders.append(msg.sender)                                            │ 10    │ 6     │ 6      │ 0     │ 6     │ 6     │
│ ---------------------------------------------------- │ --------------------------------------------------------------------------      │ ----- │ ----- │ -----  │ ----- │ ----- │ ----- │
│ src/get_price_module.vy:_get_eth_to_usd_rate         │  14: eth_amount_in_usd: uint256 = (eth_price * eth_amount) // PRECISION         │ 11    │ 31    │ 31     │ 0     │ 31    │ 31    │
│ src/get_price_module.vy:_get_eth_to_usd_rate         │  13: eth_price: uint256 = (convert(price, uint256)) * (10**10)                  │ 11    │ 26    │ 26     │ 0     │ 26    │ 26    │
│ src/get_price_module.vy:_get_eth_to_usd_rate         │  12: price: int256 = staticcall price_feed.latestAnswer()                       │ 11    │ 23    │ 23     │ 0     │ 23    │ 23    │
│ src/get_price_module.vy:_get_eth_to_usd_rate         │  15: return eth_amount_in_usd # 18 0's, 18 decimal places                       │ 11    │ 13    │ 14     │ 0     │ 11    │ 14    │
│ ---------------------------------------------------- │ --------------------------------------------------------------------------      │ ----- │ ----- │ -----  │ ----- │ ----- │ ----- │
│ src/buy_me_a_coffee.vy:fund                          │  30: self._fund()                                                               │ 10    │ 11    │ 11     │ 0     │ 11    │ 11    │
│ src/buy_me_a_coffee.vy:fund                          │  29: def fund():                                                                │ 10    │ 4     │ 4      │ 0     │ 4     │ 4     │
│ ---------------------------------------------------- │ --------------------------------------------------------------------------      │ ----- │ ----- │ -----  │ ----- │ ----- │ ----- │
│ src/buy_me_a_coffee.vy:get_eth_to_usd_rate           │  63: return get_price_module._get_eth_to_usd_rate(PRICE_FEED, eth_amount)       │ 1     │ 21    │ 21     │ 0     │ 21    │ 21    │
│ src/buy_me_a_coffee.vy:get_eth_to_usd_rate           │  62: def get_eth_to_usd_rate(eth_amount: uint256) -> uint256:                   │ 1     │ 3     │ 3      │ 0     │ 3     │ 3     │
├──────────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────────────────────────┼───────┼───────┼────────┼───────┼───────┼───────┤
│ Path: src/mocks                                      │                                                                                 │       │       │        │       │       │       │
│ Name: mocks_v3_aggregator.vy                         │                                                                                 │       │       │        │       │       │       │
│ Address: 0xC6Acb7D16D51f72eAA659668F30A40d87E2E0551  │                                                                                 │ Count │ Mean  │ Median │ Stdev │ Min   │ Max   │
│ ---------------------------------------------------- │ --------------------------------------------------------------------------      │ ----- │ ----- │ -----  │ ----- │ ----- │ ----- │
│ src/mocks/mocks_v3_aggregator.vy:                    │   5: latestAnswer: public(int256)                                               │ 11    │ 3     │ 3      │ 0     │ 3     │ 3     │
└──────────────────────────────────────────────────────┴─────────────────────────────────────────────────────────────────────────────────┴───────┴───────┴────────┴───────┴───────┴───────┘


=============================== warnings summary ===============================
.venv/lib/python3.12/site-packages/vyper/builtins/functions.py:2268
  /home/guire/vyper-course/mox-buy-me-a-coffee-cu/.venv/lib/python3.12/site-packages/vyper/builtins/functions.py:2268: UserWarning: `print` should only be used for debugging!
  
    contract "/home/guire/vyper-course/mox-buy-me-a-coffee-cu/src/mocks/mocks_v3_aggregator.vy:23", function "__init__", line 23:4 
         22     self.updateAnswer(_initialAnswer)
    ---> 23     print("HELLO FROM MOCK AGGREGATOR")
    ------------^
         24
  
    vyper_warn("`print` should only be used for debugging!", node)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
========================= 8 passed, 1 warning in 0.09s =========================
